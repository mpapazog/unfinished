# This is a sample configuration file for offline_logging.py
# You can find the latest version of the script, as well as an up-to-date sample configuration file here:
# https://github.com/meraki/automation-scripts/tree/master/offline_logging

# This comfiguration file uses YAML 1.1 format: https://yaml.org/spec/1.1/

# How often to scan Meraki dashboard for updated info, in minutes. Minumum: 5, maximum: 43000
scan_interval_minutes: 10
meraki_dashboard_api:
    # Modify this value to match your Meraki Dashboard API key
    api_key: 1234
    
    # Modify this value to match the organizationId of the organization you are logging data from
    # To find your organizationId, by calling this endpoint: https://developer.cisco.com/meraki/api-v1/#!get-organizations
    organization_id: 4567
mongodb:
    host: localhost
    port: 27017
    database_name: meraki
        
# Which networks to include in scans. If a network has a name, id or tag that matches any of the items in the lists below,
# it will be included in scans. Alternatively, you can set "include_all_networks: true" to log all networks
sources:
    network_names: #list
        - "Headquarters"
        - "Stockholm Branch"
    network_ids: #list
    network_tags: #list
        - "logging"
    include_all_networks: false

# Which endpoints of the Meraki dashboard API to scan. Operation names match Operation Ids in the API:
# https://developer.cisco.com/meraki/api-v1
# Set "enabled: true" for the ones you want to scan and "enabled: false" for the ones you want to omit

endpoints:
    getNetworkClients:
        enabled: true
        # whether to skip clients with MAC address manufacturer "Meraki" or "Cisco Meraki"
        ignore_manufacturer_meraki: true
        collection: networkClients
        mode: append
    getNetworkClientsApplicationUsage:
        # requires getNetworkClients
        # Note that this will not work correctly for short scan intervals. 20min+ is recommended
        enabled: true
        collection: networkClientsApplicationUsage
        mode: append
    getNetworkClientTrafficHistory:
        # requires getNetworkClients
        # This can be very slow in large environments, since every client needs to be fetched individually
        # and log entries on long-running networks can be huge, even hitting the MongoDB 16MB/document limit
        enabled: true
        # Splits large traffic history arrays to multiple pages to be able to write them into the database. 
        # Lower this value if you are getting "document too large" errors, or increase to have fewer documents
        # per client
        max_history_records_per_document: 10000
        collection: networkClientTrafficHistory
        mode: update
    getNetworkMerakiAuthUsers:
        enabled: true
        # whether to log template users, if network is bound to a config template
        include_template_users: true 
        collection: networkMerakiAuthUsers
        mode: update
    getOrganizationAdmins:
        enabled: true
        collection: organizationAdmins
        mode: update